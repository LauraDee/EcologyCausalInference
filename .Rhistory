mutate(across(everything(), ~. == 1, .names = "driver:{.col}")) # Convert to TRUE/FALSE
reshaped_data_expanded <- reshaped_data_d %>%
mutate(driver_list = strsplit(driver, ",")) %>% # Split the drivers
unnest_longer(driver_list) %>%                  # Expand rows for each driver
mutate(driver_list = trimws(driver_list)) %>%   # Remove extra spaces
pivot_wider(
names_from = driver_list,
values_from = driver_list,
values_fn = length, # Set to 1 if present, otherwise NA
values_fill = list(driver_list = 0) # Replace NA with 0
) %>%
mutate(across(everything(), ~. == 1, .names = "driver:{.col}")) # Convert to TRUE/FALSE
glimpse(reshaped_data_d)
glimpse(all_drivers)
rlang::last_trace()
biotic <- read.csv("./data_cleaning/bioticFlowSubtype_lookup.csv")
#combine subflows look ups into a single datafile - **this didnt work** so I coerced the names to be the same
glimpse(biotic)
?left_join
## Process Marshall Fire data for class demo
setwd("~/Dropbox/Causal Inference in Ecology/Datasets/MarshallFire/")
library(dplyr)
library(data.table)
fire <- fread("marshallfire.csv")
head(fire)
#remove columns that are identifiable
fire$Lat = NULL
fire$Long = NULL
fire$GMAP_ID = NULL
fire$BACIP_trt = NULL
fire$Burn21 = NULL
fire$BeforeAfter = NULL
head(fire)
#firedata$treat <- ifelse(firedata$Burn21 == "Y", "1" , "0")
# firedata$BeforeAfter <- ifelse(firedata$Year>2021, "after", "before")
write.csv(fire, "marshallfire_classdemo.csv")
knitr::opts_chunk$set( echo=TRUE, message=F, warning=F, fig.width = 10 )
firedata <- read.csv("marshallfire_classdemo.csv")
---
title: "Difference-in-Difference with the Marshall Fire and Boulder, CO Vegetation"
---
title: "Difference-in-Difference with the Marshall Fire and Boulder, CO Vegetation"
---
title: "Difference-in-Difference with the Marshall Fire and Boulder, CO Vegetation"
firedata <- read.csv("marshallfire_classdemo.csv")
## Due Wed. 3/5 DiD extensions and issues
1) [Brynes and Dee (2025) Ecology Letters](https://pubmed.ncbi.nlm.nih.gov/39836442/)
reshaped_data <- read.csv("data/003_output_byFlow.csv")
setwd("/Users/lade8828/Library/CloudStorage/OneDrive-UCB-O365/Documents/GitHub/BCCAch7/")
setwd("/Users/lade8828/Library/CloudStorage/OneDrive-UCB-O365/Documents/GitHub/BCCAch7/")
#load libraries
library(ggplot2)
reshaped_data <- read.csv("data/006_output_recoded.csv")
glimpse(reshaped_data)
#updated col names
altered_flow_cols <- names(reshaped_data)[grepl("2.7.Altered.Flow.", names(reshaped_data))]
impact_cols <- names(reshaped_data)[grepl("2.12.Impact.", names(reshaped_data))]
driver_cols <- names(reshaped_data)[grepl("driver.", names(reshaped_data))]
#Remove the No Impact entry
impact_cols <- impact_cols[-1]
# Filter relevant columns for Altered Flow and Impact
"%notin%" <- Negate("%in%")
interaction_data <- reshaped_data %>% filter(`Citation` %notin% c("TEST","test","Test")) %>%
select(all_of(c(altered_flow_cols, impact_cols, driver_cols))) %>%
mutate(row_id = row_number())  %>%
filter(!if_all(-row_id, ~ .x == ""))
glimpse(interaction_data)
combination_counts_df <- as.data.frame(combination_counts)
# Convert to a dataframe for easy viewing
combination_counts_df <- as.data.frame(combination_counts)
combination_counts <- combinations %>%
rowwise() %>%
mutate(
count = sum(
interaction_data[[Flow]] != "" & interaction_data[[Impact]] != "",
na.rm = TRUE
)
) %>%
ungroup()
combinations <- expand.grid(
Flow = flow_columns,
Impact = impact_columns,
stringsAsFactors = FALSE
)
#update column names
flow_columns <- names(interaction_data)[grepl("2.7.Altered.Flow.", names(interaction_data))]
impact_columns <- names(interaction_data)[grepl("2.12.Impact.", names(interaction_data))]
combinations <- expand.grid(
Flow = flow_columns,
Impact = impact_columns,
stringsAsFactors = FALSE
)
combination_counts <- combinations %>%
rowwise() %>%
mutate(
count = sum(
interaction_data[[Flow]] != "" & interaction_data[[Impact]] != "",
na.rm = TRUE
)
) %>%
ungroup()
# Convert to a dataframe for easy viewing
combination_counts_df <- as.data.frame(combination_counts)
# Preview the result
glimpse(combination_counts_df)
# Create the plot of paper counts by combination
ggplot(combination_counts_df, aes(x = Flow, y = Impact, size = count)) +
geom_point(color = "blue", alpha = 0.7) +  # Use points to represent combinations
scale_size_continuous(range = c(3, 10)) +  # Adjust size range for better visibility
labs(
title = "Interaction Between Altered Flows and Impacts",
x = "Altered Flow",
y = "Impact",
size = "Count"
) +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),  # Rotate x-axis labels for readability
panel.grid.major = element_line(color = "grey80", linetype = "dotted")
)
combination_counts_by_impact <- combinations %>%
rowwise() %>%
mutate(
Increase = sum(
interaction_data[[Flow]] != "" & interaction_data[[Impact]] == "Increase",
na.rm = TRUE
),
Decrease = sum(
interaction_data[[Flow]] != "" & interaction_data[[Impact]] == "Decrease",
na.rm = TRUE
),
Complex = sum(
interaction_data[[Flow]] != "" & interaction_data[[Impact]] == "Complex change",
na.rm = TRUE
),
) %>%
pivot_longer(cols = c(Increase, Decrease, Complex), names_to = "ImpactDirection", values_to = "count") %>%
ungroup()
# Filter out rows with count == 0
combination_counts_by_impact_filtered <- combination_counts_by_impact %>%
filter(count > 0)
ggplot(combination_counts_by_impact_filtered, aes(x = Flow, y = Impact, size = count, color = ImpactDirection)) +
geom_point(alpha = 0.7) +  # Add points with alpha transparency
facet_wrap(~ImpactDirection, scales = "free") +  # Create facets for each impact direction
scale_size_continuous(range = c(3, 10)) +  # Adjust size range
scale_color_manual(values = c("Increase" = "green", "Decrease" = "red", "Complex" = "purple")) +
labs(
title = "Interaction Between Altered Flows and Impacts by Impact Direction",
x = "Altered Flow",
y = "Impact",
size = "Count",
color = "Impact Direction"
) +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),  # Rotate x-axis labels for readability
panel.grid.major = element_line(color = "grey80", linetype = "dotted")
)
combinations2 <- expand.grid(
# Flow = flow_columns,
Impact = impact_columns,
Driver = driver_cols,
stringsAsFactors = FALSE
)
# Count occurrences of each combination in the data
# combination_counts_driver_impact <- combinations2 %>%
#   rowwise() %>%
#   mutate(
#     count = sum(
#       interaction_data[[Driver]] != "" & interaction_data[[Impact]] != "",
#       na.rm = TRUE
#     )
#   ) %>%
#   ungroup()
combination_counts_by_impact_driver <- combinations2 %>%
rowwise() %>%
mutate(
Increase = sum(
interaction_data[[Driver]] != "" & interaction_data[[Impact]] == "Increase",
na.rm = TRUE
),
Decrease = sum(
interaction_data[[Driver]] != "" & interaction_data[[Impact]] == "Decrease",
na.rm = TRUE
),
Complex = sum(
interaction_data[[Driver]] != "" & interaction_data[[Impact]] == "Complex change",
na.rm = TRUE
),
NoChange= sum(
interaction_data[[Driver]] != "" & interaction_data[[Impact]] == "No change (measured)",
na.rm = TRUE
)
) %>%
pivot_longer(cols = c(Increase, Decrease, Complex, NoChange), names_to = "ImpactDirection", values_to = "count") %>%
ungroup()
# Filter out rows with count == 0
combination_counts_by_impact_driver_filtered <- combination_counts_by_impact_driver %>%
filter(count > 0)
# Convert to a dataframe for easy viewing
combination_counts_by_impact_driver_filtered <- as.data.frame(combination_counts_by_impact_driver_filtered)
# Preview the result
glimpse(combination_counts_by_impact_driver_filtered)
head(combination_counts_by_impact_driver_filtered)
write.csv(combination_counts_by_impact_driver_filtered, "driver_impact_counts.csv")
#do a check to see if these counts are right/plausible
table(reshaped_data$X2.12.Impact..Abundance,reshaped_data$driver.Climate.change..generic.)
#We need to remoe the blank entries for the counts!
table(reshaped_data$X2.12.Impact..Richness,reshaped_data$driver.Climate.change..generic.)
#yes the combination_counts_by_impact_driver_filtered worked!
#this doesnt seem right?? is it?
table(combination_counts_by_impact_driver_filtered$ImpactDirection)
#this looks wrong -
driver_impact <-  ggplot(combination_counts_by_impact_driver_filtered, aes(x = Driver, y = Impact, size = count, color = ImpactDirection)) +
geom_point(alpha = 0.7) +  # Add points with alpha transparency
facet_wrap(~ImpactDirection, scales = "fixed") +  # Create facets for each NCP direction
scale_size_continuous(range = c(1, 10)) +  # Adjust size range
scale_color_manual(values = c("Increase" = "green", "Decrease" = "red", "Complex" = "purple", "NoChange" = "blue")) +
labs(
title = "Driver to Biodiversity Impact",
x = "Driver",
y = "Impact",
size = "Count",
color = "Impact Direction"
) +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),  # Rotate x-axis labels for readability
panel.grid.major = element_line(color = "grey80", linetype = "dotted")
)
driver_impact
#this looks wrong -
driver_impact <-  ggplot(combination_counts_by_impact_driver_filtered, aes(x = Driver, y = Impact, size = count, color = ImpactDirection)) +
geom_point(alpha = 0.7) +  # Add points with alpha transparency
facet_wrap(~ImpactDirection, scales = "fixed") +  # Create facets for each NCP direction
scale_size_continuous(range = c(1, 10)) +  # Adjust size range
scale_color_manual(values = c("Increase" = "green", "Decrease" = "red", "Complex" = "purple", "NoChange" = "blue")) +
labs(
title = "Driver to Biodiversity Impact",
x = "Driver",
y = "Impact",
size = "Count",
color = "Impact Direction"
) +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),  # Rotate x-axis labels for readability
panel.grid.major = element_line(color = "grey80", linetype = "dotted")
)
driver_impact
#this doesnt seem right?? is it?
table(combination_counts_by_impact_driver_filtered$ImpactDirection)
setwd("/Users/lade8828/Library/CloudStorage/OneDrive-UCB-O365/Documents/GitHub/BCCAch7/")
reshaped_data <- read.csv("data/006_output_recoded.csv")
glimpse(reshaped_data)
#Figures of drivers, breakdown by flow, impacts, etc.
graphics.off()
rm(list=ls())
#load libraries
library(ggplot2)
setwd("/Users/lade8828/Library/CloudStorage/OneDrive-UCB-O365/Documents/GitHub/BCCAch7/")
reshaped_data <- read.csv("data/006_output_recoded.csv")
glimpse(reshaped_data)
library(data.table)
table(reshaped_data$driver.heat.waves)
## Count of paper by Flow
table(reshaped_data$X2.1.Flow.Type)
## Count of paper by Flow
table(reshaped_data$X2.1.Flow.Type)
data <- reshaped_data %>% filter(`X2.1.Flow.Type` %notin% c("Remove","Recode"))
## Count of paper by Flow
table(data$X2.1.Flow.Type)
data = as.data.table(data)
cover[X2.1.Flow.Type =="Trade (transport of goods and services)", X2.1.Flow.Type:="Human movement"]
data[X2.1.Flow.Type =="Trade (transport of goods and services)", X2.1.Flow.Type:="Human movement"]
data = as.data.table(data)
## Count of paper by Flow
table(data$X2.1.Flow.Type)
flowcount <-  ggplot(data, aes(x = X2.1.Flow.Type, y = X2.1.Flow.Type, size = count)) +
geom_point(color = "blue", alpha = 0.7)
flowcount
flowcount <-  ggplot(data, aes(y = X2.1.Flow.Type, size = count)) +
geom_point(color = "blue", alpha = 0.7)
ggplot(data, aes(y = X2.1.Flow.Type, size = count)) +
geom_point(color = "blue", alpha = 0.7)
ggplot(data, aes(y = X2.1.Flow.Type, size = count)) +
geom_bar(color = "blue", alpha = 0.7)
ggplot(as.data.frame(data), aes(factor(X2.1.Flow.Type), Freq, fill = X2.1.Flow.Type)) +
geom_col(position = 'dodge')
ggplot(as.data.frame(data), aes(factor(X2.1.Flow.Type),  fill = X2.1.Flow.Type)) +
geom_col(position = 'dodge')
ggplot(as.data.frame(data), aes(factor(X2.1.Flow.Type),  fill = X2.1.Flow.Type)) +
geom_hist(position = 'dodge')
ggplot(as.data.frame(data), aes(factor(X2.1.Flow.Type),  fill = X2.1.Flow.Type)) +
geom_bar(position = 'dodge')
ggplot(as.data.frame(data), aes(X2.1.Flow.Type,  fill = X2.1.Flow.Type)) +
geom_bar(position = 'dodge')
ggplot(as.data.frame(data), aes(X2.1.Flow.Type,  fill = X2.1.Flow.Type)) +
geom_bar(position = 'dodge') +
labs(
title = "Count of Papers by Flow Type",
x = "Flow Type",
y = "Count",
) +
theme_minimal()
ggplot(as.data.frame(data), aes(X2.1.Flow.Type,  fill = X2.1.Flow.Type)) +
geom_bar() +
labs(
title = "Count of Papers by Flow Type",
x = "Flow Type",
y = "Count",
) +
theme_minimal()
ggplot(as.data.frame(data), aes(X2.1.Flow.Type,  fill = X2.1.Flow.Type)) +
geom_bar(position = 'dodge') +
labs(
title = "Count of Papers by Flow Type",
x = "Flow Type",
y = "Count",
) +
theme_minimal()
+  theme(
axis.text.x = element_text(angle = 45, hjust = 1),  # Rotate x-axis labels for readability
panel.grid.major = element_line(color = "grey80", linetype = "dotted")
)
ggplot(as.data.frame(data), aes(X2.1.Flow.Type,  fill = X2.1.Flow.Type)) +
geom_bar(position = 'dodge') +
labs(
title = "Count of Papers by Flow Type",
x = "Flow Type",
y = "Count") +
theme_minimal()
flowcount + guides(fill="none")
ggplot(as.data.frame(data), aes(X2.1.Flow.Type)) +
geom_bar(position = 'dodge') +
labs(
title = "Count of Papers by Flow Type",
x = "Flow Type",
y = "Count") +
theme_minimal()
flowcount + theme_classic() + theme(legend.position="none")
flowcount + theme_classic() + theme(legend.position="none")
ggplot(as.data.frame(data), aes(X2.1.Flow.Type,  fill = X2.1.Flow.Type)) +
geom_bar(position = 'dodge') +
labs(
title = "Count of Papers by Flow Type",
x = "Flow Type",
y = "Count") +
theme_minimal() + theme(legend.position="none")
glimpse(reshaped_data)
## Count of paper by Subflow
table(data$X2.2.Subtype)
subflowcount <- ggplot(as.data.frame(data), aes(X2.2.Subtype,  fill = X2.1.Flow.Type)) +
geom_bar(position = 'dodge') +
labs(
title = "Count of Papers by Subflow Type",
x = "Flow Type",
y = "Count") +
theme_minimal() + theme(legend.position="none")
subflowcount
subflowcount + coord_flip()
table(data$X2.2.Subtype)
subflowcount <- ggplot(as.data.frame(data), aes(X2.2.Subtype,  fill = X2.1.Flow.Type)) +
geom_bar(position = 'dodge') +
labs(
title = "Count of Papers by Subflow Type",
x = "Flow Type",
y = "Count") +
theme_minimal()
subflowcount + coord_flip()
subflowcount + coord_flip() +
guides(color = guide_legend(title = "Users By guides"))
ggplot(as.data.frame(data), aes(X2.2.Subtype,  fill = X2.1.Flow.Type)) +
geom_bar(position = 'dodge') +
labs(
title = "Count of Papers by Subflow Type",
x = "Subflow Type",
y = "Count") +
theme_minimal() + coord_flip() +
guides(color = guide_legend(title = "Flow Type"))
ggplot(as.data.frame(data), aes(X2.2.Subtype,  fill = X2.1.Flow.Type)) +
geom_bar(position = 'dodge') +
labs(
title = "Count of Papers by Subflow Type",
x = "Subflow Type",
y = "Count") +
theme_minimal() + coord_flip() +
labs(color = "Flow Type")
ggplot(as.data.frame(data), aes(X2.2.Subtype,  fill = X2.1.Flow.Type)) +
geom_bar(position = 'dodge') +
labs(
title = "Count of Papers by Subflow Type",
x = "Subflow Type",
y = "Count") +
theme_minimal() + coord_flip() + theme(legend.title = "Flow Type"
## Count of papers by Driver
table(reshaped_data$driver.heat.waves)
sum(data$driver.heat.waves)
glimpse(reshaped_data)
sum(data$driver.Drought)
biotic = data[X2.1.Flow.Type == "Biotic",]
table(biotic$X2.1.Flow.Type)
biotic = data[X2.1.Flow.Type == "Biotic",]
biotic.subflowcount <- ggplot(as.data.frame(biotic), aes(X2.2.Subtype,  fill = X2.1.Flow.Type)) +
geom_bar(position = 'dodge') +
labs(
title = "Count of Biotic Papers by Subflow Type",
x = "Subflow Type",
y = "Count") +
theme_minimal() + coord_flip() + theme(legend.title = "Flow Type")
biotic.subflowcount
biotic.subflowcount <- ggplot(as.data.frame(biotic), aes(X2.2.Subtype,  fill = X2.1.Flow.Type)) +
geom_bar(position = 'dodge') +
labs(
title = "Count of Biotic Papers by Subflow Type",
x = "Subflow Type",
y = "Count") +
theme_minimal() + coord_flip() + theme(legend.title = "Flow Type")
biotic.subflowcount
ggplot(as.data.frame(biotic), aes(X2.2.Subtype,  fill = X2.1.Flow.Type)) +
geom_bar(position = 'dodge') +
labs(
title = "Count of Biotic Papers by Subflow Type",
x = "Subflow Type",
y = "Count") +
theme_minimal() + coord_flip() + theme(legend.title = "Flow Type")
biotic.subflowcount <- ggplot(as.data.frame(biotic), aes(X2.2.Subtype)) +
geom_bar(position = 'dodge') +
labs(
title = "Count of Biotic Papers by Subflow Type",
x = "Subflow Type",
y = "Count") +
theme_minimal() + coord_flip()
biotic.subflowcount
biotic = data[X2.1.Flow.Type == "Biotic",]
biotic[X2.2.Subtype == "range-shift", X2.2.Subtype := "Range shift"]
biotic[X2.2.Subtype == "species range shifts", X2.2.Subtype := "Range shift"]
biotic.subflowcount <- ggplot(as.data.frame(biotic), aes(X2.2.Subtype)) +
geom_bar(position = 'dodge') +
labs(
title = "Count of Biotic Papers by Subflow Type",
x = "Subflow Type",
y = "Count") +
theme_minimal() + coord_flip()
biotic.subflowcount
driver_cols <- names(reshaped_data)[grepl("driver.", names(reshaped_data))]
head(driver_cols)
driver_cols <- names(data)[grepl("driver.", names(data))]
data %>%
group_by(driver_cols) %>%
summarise(total = sum(unlist(select(cur_data(), starts_with('task'))), na.rm = TRUE))
driverdat = data[, .(total = sum(na.omit(unlist(.SD)))), name, .SDcols = patterns("^driver.")]
driverdat = data[, .(total = sum(na.omit(unlist(.SD)))), .SDcols = patterns("^driver.")]
head(driverdat)
driverdat = data[, .(total = sum(na.omit(unlist(.SD)))), .SD, .SDcols = patterns("^driver.")]
driverdat
driverdat = data[, .(total = sum(na.omit(unlist(.SD)))), TRUE, .SDcols = patterns("^driver.")]
count_true_cols <- function(data, driver_cols) {
data %>%
select(driver_cols) %>%
summarise_all(.funs = ~sum(.x))
}
data
count_true_cols
print(results)
results <- count_true_cols(data, driver_cols)
print(driver_cols)
count_true_cols <- function(data, cols) {
data %>%
select(cols) %>%
# summarise_all(.funs = ~sum(.x))
summarise(total = sum(unlist(select(cur_data(), starts_with('driver.'))), na.rm = TRUE))
}
results <- count_true_cols(data, driver_cols)
print(results)
count_true_cols <- function(data, cols) {
data %>%
select(cols) %>%
# summarise_all(.funs = ~sum(.x))
summarise_all(total = sum(unlist(select(cur_data(), starts_with('driver.'))), na.rm = TRUE))
}
print(driver_cols)
results <- count_true_cols(data, driver_cols)
print(results)
count_true_cols <- function(data, cols) {
data %>%
select(cols) %>%
summarise_all(.funs = ~sum(.x), starts_with('driver.')
# summarise_all(total = sum(unlist(select(cur_data(), starts_with('driver.'))), na.rm = TRUE))
}
count_true_cols <- function(data, cols) {
data %>%
select(cols) %>%
summarise_all(.funs = ~sum(.x), starts_with('driver.'))
# summarise_all(total = sum(unlist(select(cur_data(), starts_with('driver.'))), na.rm = TRUE))
count_true_cols <- function(data, cols) {
data %>%
select(cols) %>%
summarise_all(.funs = ~sum(.x), starts_with('driver.'))
}
dd
dlmvLKDV
count_true_cols <- function(data, cols) {
data %>%
select(cols) %>%
summarise_all(.funs = ~sum(.x), starts_with('driver.'))
}
dsdenfknw
as.array(x = )
#Figures of drivers, breakdown by flow, impacts, etc.
graphics.off()
rm(list=ls())
